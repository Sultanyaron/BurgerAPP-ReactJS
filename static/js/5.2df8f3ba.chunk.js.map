{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ing","style","textTransform","display","margin","border","padding","key","className","classes","Order","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,iICoCXC,EAjCD,SAACC,GAEX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAIJ,MAAOI,EAAIJ,KARjB,KAQyBI,EAAIH,OAR7B,QAWX,OACI,yBAAKW,UAAWC,IAAQC,OACrB,2CAAiBZ,GACjB,qCAAU,uCAAaN,EAAMmB,MAAMC,QAAQ,O,wBCxBhDC,E,4LAEEC,KAAKtB,MAAMuB,cAAcD,KAAKtB,MAAMwB,MAAOF,KAAKtB,MAAMyB,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MAWb,OAVKL,KAAKtB,MAAM4B,UACZF,EAASJ,KAAKtB,MAAM0B,OAAOnB,KAAI,SAAAR,GAAK,OAC5B,kBAACmB,EAAD,CACIH,IAAKhB,EAAM8B,GACX5B,YAAaF,EAAME,YACnBkB,OAAQpB,EAAMoB,YAM1B,6BACKO,O,GAnBII,aAwCNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAMjC,MAAM2B,OACpBE,QAASI,EAAMjC,MAAM6B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAASC,IAAoBX,EAAOC,QAI/DM,CAA6CK,YAAiBf,EAAQgB","file":"static/js/5.2df8f3ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__c--Iy\"};","\r\nimport React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName, \r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    };\r\n\r\n    const ingredientOutput = ingredients.map(ing => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ing.name}>{ing.name} ({ing.amount})</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n           <p>Ingredients: {ingredientOutput}</p> \r\n           <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios-orders';\r\nimport Order from '../../components/Order/Order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    };\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={+order.price} />\r\n                ))\r\n            \r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}