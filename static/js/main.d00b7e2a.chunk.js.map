{"version":3,"sources":["store/actions/actionTypes.js","shared/utility.js","hoc/Auxiliary/Auxiliary.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","hoc/asyncComponent/asyncComponent.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","index.js"],"names":["ADD_INGREDIENTS","REMOVE_INGREDIENTS","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isNumeric","aux","props","children","addIngredient","ingName","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","res","ingredients","data","catch","error","purchaseBurger","orderData","token","post","response","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","orders","fetchedOrders","key","push","err","authSuccess","actioTypes","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","authCheckState","getItem","module","exports","instance","create","baseURL","backdrop","show","className","classes","Backdrop","onClick","clicked","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","button","disabled","Button","btnType","join","spinner","Loader","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","message","burgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","BurgerIngredient","reduce","arr","el","concat","Burger","initialState","totalPrice","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","updatedIngredient","updatedState","updatedIng","updatedSta","setIngredients","fetchIngredientsFailed","reducer","loading","purchased","purchaseBurgerStart","newOrder","fetchOrderStart","fetchOrderSuccess","fetchOrderFail","authRedirectPath","authStart","authFail","authLogout","asyncComponent","importComponent","component","comp","default","Comp","logo","Logo","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuth","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","sideDrawer","attachedClasses","SideDrawer","Closed","open","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawertoggleHandler","prevState","Content","connect","buildControl","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemove","OrderButton","purchaseable","ordered","OrderSummary","ingredientsSummary","textTransform","purchaseCancelled","purchaseContinued","BurgerBuilder","purchasing","updatePurchaseState","acc","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandeler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","burgerBuilder","actions","Logout","onLogout","asyncCheckout","console","log","asyncOrders","asyncAuth","App","onTryAutoSignup","routes","withRouter","Boolean","window","location","hostname","match","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","order","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qHACA,giBAAO,IAAMA,EAAkB,kBAClBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAA2B,2BAE3BC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAgB,gBAEhBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAAa,aACbC,EAAe,eACfC,EAAY,YACZC,EAAc,cAEdC,EAAyB,0B,4UCpB/B,IAAMC,EAAe,SAACC,EAAWC,GACpC,O,yVAAO,CAAP,GACOD,EADP,GAEOC,IAIEC,EAAgB,SAACC,EAAOC,GACjC,IAAIC,GAAU,EAEd,IAAID,EACA,OAAO,EAcX,GAXIA,EAAME,WACND,EAA2B,KAAjBF,EAAMI,QAAiBF,GAGjCD,EAAMI,YACNH,EAAUF,EAAMM,QAAUL,EAAMI,WAAaH,GAG7CD,EAAMM,YACNL,EAAUF,EAAMM,QAAUL,EAAMI,WAAaH,GAE7CD,EAAMO,QAAS,CAEfN,EADgB,wIACEO,KAAKT,IAAUE,EAErC,GAAID,EAAMS,UAAW,CAEjBR,EADgB,QACEO,KAAKT,IAAUE,EAErC,OAAOA,I,oCC/BIS,IAFH,SAACC,GAAD,OAAWA,EAAMC,W,oDCGhBC,EAAgB,SAACC,GAC1B,MAAO,CACHC,KAAMC,IACNC,eAAgBH,IAKXI,EAAmB,SAACJ,GAC7B,MAAO,CACHC,KAAMC,IACNC,eAAgBH,IAkBXK,EAAkB,WAC3B,OAAO,SAAAC,GACHC,IAAMC,IAAI,8DACLC,MAAK,SAAAC,GAjBY,IAACC,EAkBfL,GAlBeK,EAkBSD,EAAIE,KAjBjC,CACHX,KAAMC,IACNS,YAAaA,QAiBRE,OAAM,SAAAC,GACPR,EAbD,CACHL,KAAMC,W,ikBCxBP,IAqBMa,EAAiB,SAAEC,EAAWC,GACvC,OAAO,SAAAX,GACHA,EAPG,CACHL,KAAMC,MAONK,IAAMW,KAAM,qBAAuBD,EAAOD,GACrCP,MAAM,SAAAU,GACHb,EA1BqB,SAACc,EAAIJ,GACtC,MAAO,CACHf,KAAMC,IACNmB,QAASD,EACTJ,UAAWA,GAsBMM,CAAuBH,EAASP,KAAKW,KAAMP,OAEvDH,OAAM,SAAAC,GACHR,EArBkB,SAACQ,GAC/B,MAAO,CACHb,KAAMC,IACNY,MAAOA,GAkBUU,CAAoBV,SAKhCW,EAAe,WACxB,MAAO,CACHxB,KAAMC,MAwBDwB,EAAc,SAACT,EAAOU,GAC/B,OAAO,SAAArB,GACHA,EAPG,CACHL,KAAMC,MAON,IAAM0B,EAAc,SAAWX,EAAQ,8BAAiCU,EAAS,IACjFpB,IAAMC,IAAI,eAAiBoB,GACtBnB,MAAK,SAAAC,GACF,IA1BkBmB,EA0BZC,EAAgB,GACtB,IAAK,IAAIC,KAAOrB,EAAIE,KAChBkB,EAAcE,KAAd,KACOtB,EAAIE,KAAKmB,GADhB,CAEIX,GAAIW,KAGZzB,GAjCkBuB,EAiCSC,EAhChC,CACH7B,KAAMC,IACN2B,OAAQA,QAgCHhB,OAAM,SAAAoB,GA5BW,IAACnB,EA6BfR,GA7BeQ,EA6BSmB,EA5B7B,CACHhC,KAAMC,IACNY,MAAOA,U,iBC5CFoB,EAAc,SAACjB,EAAOU,GAE/B,MAAO,CACH1B,KAAMkC,IACNC,QAASnB,EACTU,OAAQA,IAWHU,EAAS,WAIlB,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UACjB,CACHtC,KAAMkC,MAIDK,EAAmB,SAACC,GAC7B,OAAO,SAAAnC,GACHoC,YAAW,WACPpC,EAAS+B,OACM,IAAjBI,KAIGE,EAAO,SAACC,EAAOC,EAAUC,GAClC,OAAO,SAAAxC,GACHA,EAxCG,CACHL,KAAMkC,MAwCN,IAAMY,EAAW,CACbH,MAAOA,EACPC,SAAUA,EACVG,mBAAoB,GAGpBC,EAAM,iEACLH,IACDG,EAAM,8EAEV1C,IAAMW,KAAK+B,EALC,0CAKUF,GACjBtC,MAAK,SAAAC,GACF,IAAMwC,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAiC,IAArB1C,EAAIE,KAAKyC,WAChEf,aAAagB,QAAQ,QAAS5C,EAAIE,KAAKwB,SACvCE,aAAagB,QAAQ,iBAAkBJ,GACvCZ,aAAagB,QAAQ,SAAU5C,EAAIE,KAAK2C,SACxCjD,EAAS4B,EAAYxB,EAAIE,KAAKwB,QAAS1B,EAAIE,KAAK2C,UAChDjD,EAASkC,EAAiB9B,EAAIE,KAAKyC,eAEtCxC,OAAM,SAAAoB,GA9CK,IAACnB,EA+CTR,GA/CSQ,EA+CSmB,EAAId,SAASP,KAAKE,MA9CzC,CACHb,KAAMkC,IACNrB,MAAOA,UAiDF0C,EAAsB,SAACC,GAChC,MAAO,CACHxD,KAAMkC,IACNsB,KAAMA,IAIDC,EAAiB,WAC1B,OAAO,SAAApD,GACH,IAAMW,EAAQqB,aAAaqB,QAAQ,SACnC,GAAK1C,EAEE,CACH,IAAMwB,EAAiB,IAAIU,KAAKb,aAAaqB,QAAQ,mBACrD,GAAIlB,GAAkB,IAAIU,KACtB7C,EAAS+B,SACN,CACH,IAAMV,EAASW,aAAaqB,QAAQ,UACpCrD,EAAS4B,EAAYjB,EAAOU,IAC5BrB,EAASkC,GAAkBC,EAAeW,WAAY,IAAID,MAAOC,WAAa,YARlF9C,EAAS+B,OCjFrB,qV,mBCCAuB,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,8BCDxU,YAEMC,EAFN,OAEiBvD,EAAMwD,OAAO,CAC1BC,QAAS,+CAGEF,O,kBCLfF,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,2BAA2B,KAAO,2B,iBCAzID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,+BCDjJ,qCAOeI,IAJE,SAACpE,GAAD,OACbA,EAAMqE,KAAO,yBAAKC,UAAWC,IAAQC,SAAUC,QAASzE,EAAM0E,UAAkB,O,sHCC9EC,E,8LACoBC,EAAWC,GAC7B,OAAOD,EAAUP,OAASS,KAAK9E,MAAMqE,MAAQO,EAAU3E,WAAa6E,KAAK9E,MAAMC,W,+BAI/E,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUoE,KAAMS,KAAK9E,MAAMqE,KAAMK,QAASI,KAAK9E,MAAM+E,cACrD,yBACIT,UAAWC,IAAQI,MACnBK,MAAO,CACHC,UAAWH,KAAK9E,MAAMqE,KAAO,gBAAkB,qBAC/Ca,QAASJ,KAAK9E,MAAMqE,KAAO,IAAM,MAEpCS,KAAK9E,MAAMC,e,GAfZkF,aAuBLR,O,gBC3BfZ,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,6BCDhG,qCAWeoB,IARA,SAACpF,GAAD,OACX,4BACIqF,SAAUrF,EAAMqF,SAChBf,UAAW,CAACC,IAAQe,OAAQf,IAAQvE,EAAMuF,UAAUC,KAAK,KACzDf,QAASzE,EAAM0E,SACd1E,EAAMC,Y,kBCPf8D,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,kBCAnFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,6BCD7F,qCAOeyB,IAJC,SAACzF,GAAD,OACZ,yBAAKsE,UAAWC,IAAQmB,QAAxB,gB,oGC+CWC,IA3CU,SAACC,EAAkBlF,GACxC,kNACImF,MAAQ,CACJ5E,MAAO,MAFf,EAuBI6E,sBAAwB,WACpB,EAAKC,SAAS,CAAC9E,MAAO,QAxB9B,mFAK0B,IAAD,OACjB6D,KAAKkB,eAAiBtF,EAAMuF,aAAaC,QAAQC,KAAI,SAAAC,GAEjD,OADA,EAAKL,SAAS,CAAC9E,MAAO,OACfmF,KAEXtB,KAAKuB,eAAiB3F,EAAMuF,aAAa3E,SAAS6E,KAAI,SAAAtF,GAAG,OAAIA,KAAK,SAAAI,GAC9D,EAAK8E,SAAS,CAAC9E,MAAOA,SAXlC,6CAmBQP,EAAMuF,aAAaC,QAAQI,MAAMxB,KAAKkB,gBACtCtF,EAAMuF,aAAa3E,SAASgF,MAAMxB,KAAKuB,kBApB/C,+BA4BQ,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,CACIhC,KAAMS,KAAKe,MAAM5E,MACjB8D,YAAaD,KAAKgB,uBACjBhB,KAAKe,MAAM5E,MAAQ6D,KAAKe,MAAM5E,MAAMsF,QAAU,MAEnD,kBAACX,EAAqBd,KAAK9E,YAnCvC,GAAqBmF,e,qGCkCVqB,EAvCU,SAACxG,GACtB,IAAIyG,EAAa,KAEjB,OAAQzG,EAAMI,MACV,IAAO,eACHqG,EAAa,yBAAKnC,UAAWC,IAAQmC,cACrC,MACJ,IAAO,YACHD,EACI,yBAAKnC,UAAWC,IAAQoC,UACpB,yBAAKrC,UAAWC,IAAQqC,SACxB,yBAAKtC,UAAWC,IAAQsC,UAGhC,MACJ,IAAO,OACHJ,EAAa,yBAAKnC,UAAWC,IAAQuC,OACrC,MACJ,IAAO,SACHL,EAAa,yBAAKnC,UAAWC,IAAQwC,SACrC,MACJ,IAAO,QACHN,EAAa,yBAAKnC,UAAWC,IAAQyC,QACrC,MACJ,IAAO,QACHP,EAAa,yBAAKnC,UAAWC,IAAQ0C,QACrC,MACJ,QACIR,EAAa,KAIrB,OAAOA,GCTIS,IAtBA,SAAClH,GACZ,IAAImH,EAAyBC,OAAOC,KAAKrH,EAAMc,aAAawG,KAAI,SAAAC,GACxD,OAAO,YAAIC,MAAMxH,EAAMc,YAAYyG,KAASD,KAAI,SAACG,EAAGC,GAChD,OAAO,kBAACC,EAAD,CAAkBzF,IAAKqF,EAAQG,EAAGtH,KAAMmH,UAEpDK,QAAO,SAACC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,KACnB,IAMP,OAJsC,IAAlCX,EAAuBzH,SACvByH,EAAyB,+DAIzB,yBAAK7C,UAAWC,IAAQyD,QACpB,kBAACL,EAAD,CAAkBvH,KAAK,cAClB+G,EACL,kBAACQ,EAAD,CAAkBvH,KAAK,oB,kBCrBnC2D,EAAOC,QAAU,CAAC,QAAU,0B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,iBCApCD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,6MCErDiE,EAAe,CACjBnH,YAAa,KACboH,WAAa,EACbjH,OAAO,EACPkH,UAAU,GAGRC,EAAoB,CACtBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,IAGLtI,EAAgB,SAAC2F,EAAO4C,GAC1B,IAAMC,EAAiB,eAAMD,EAAOnI,eAAiBuF,EAAM/E,YAAY2H,EAAOnI,gBAAkB,GAE1FqI,EAAe,CACjB7H,YAFuB9B,YAAa6G,EAAM/E,YAAa4H,GAGvDR,WAAYrC,EAAMqC,WAAaE,EAAkBK,EAAOnI,gBACxD6H,UAAU,GAEd,OAAOnJ,YAAa6G,EAAO8C,IAGzBpI,EAAmB,SAACsF,EAAO4C,GAC7B,IAAMG,EAAU,eAAMH,EAAOnI,eAAiBuF,EAAM/E,YAAY2H,EAAOnI,gBAAkB,GAEnFuI,EAAa,CACf/H,YAFgB9B,YAAa6G,EAAM/E,YAAa8H,GAGhDV,WAAYrC,EAAMqC,WAAaE,EAAkBK,EAAOnI,gBACxD6H,UAAU,GAEd,OAAOnJ,YAAa6G,EAAOgD,IAGzBC,EAAiB,SAACjD,EAAO4C,GAC3B,OAAOzJ,YAAa6G,EAAO,CACvB/E,YAAa,CACTuH,MAAOI,EAAO3H,YAAYuH,MAC1BG,MAAOC,EAAO3H,YAAY0H,MAC1BF,OAAQG,EAAO3H,YAAYwH,OAC3BC,KAAME,EAAO3H,YAAYyH,MAE7BL,WAAY,EACZjH,OAAO,EACPkH,UAAU,KAIZY,EAAyB,SAAClD,EAAO4C,GACnC,OAAOzJ,YAAa6G,EAAO,CAAC5E,OAAO,KAcxB+H,EAXC,WAAmC,IAAlCnD,EAAiC,uDAAzBoC,EAAcQ,EAAW,uCAC9C,OAAQA,EAAOrI,MACX,KAAKC,IAA6B,OAAOH,EAAc2F,EAAO4C,GAC9D,KAAKpI,IAAgC,OAAOE,EAAiBsF,EAAO4C,GACpE,KAAKpI,IAA6B,OAAOyI,EAAejD,EAAO4C,GAC/D,KAAKpI,IAAsC,OAAO0I,EAAuBlD,GACzE,QAAS,OAAOA,IC5DlBoC,EAAe,CACjBjG,OAAQ,GACRiH,SAAS,EACTC,WAAW,GAGTtH,EAAe,SAACiE,EAAO4C,GACzB,OAAOzJ,YAAa6G,EAAO,CAACqD,WAAW,KAGrCC,EAAsB,SAACtD,EAAO4C,GAChC,OAAOzJ,YAAa6G,EAAO,CAACoD,SAAS,KAGnCxH,EAAwB,SAACoE,EAAO4C,GAClC,IAAMW,EAAWpK,YAAayJ,EAAOtH,UAAW,CAACI,GAAIkH,EAAOjH,UAC5D,OAAOxC,YAAa6G,EAAO,CAAEoD,SAAS,EAAOjH,OAAQ6D,EAAM7D,OAAO+F,OAAOqB,GAAWF,WAAW,KAG7FvH,EAAqB,SAACkE,EAAO4C,GAC/B,OAAOzJ,YAAa6G,EAAO,CAAEoD,SAAS,KAGpCI,EAAkB,SAACxD,EAAO4C,GAC5B,OAAOzJ,YAAa6G,EAAO,CAAEoD,SAAS,KAGpCK,EAAoB,SAACzD,EAAO4C,GAC9B,OAAOzJ,YAAa6G,EAAO,CAAE7D,OAAQyG,EAAOzG,OAAQiH,SAAS,KAG3DM,EAAiB,SAAC1D,EAAO4C,GAC3B,OAAOzJ,YAAa6G,EAAO,CAAEoD,SAAS,KAgB3BD,EAbC,WAAmC,IAAlCnD,EAAiC,uDAAzBoC,EAAcQ,EAAW,uCAC9C,OAAQA,EAAOrI,MACX,KAAKC,IAA2B,OAAOuB,EAAaiE,GACpD,KAAKxF,IAAmC,OAAO8I,EAAoBtD,GACnE,KAAKxF,IAAqC,OAAOoB,EAAsBoE,EAAO4C,GAC9E,KAAKpI,IAAkC,OAAOsB,EAAmBkE,GACjE,KAAKxF,IAAgC,OAAOgJ,EAAgBxD,GAC5D,KAAKxF,IAAkC,OAAOiJ,EAAkBzD,EAAO4C,GACvE,KAAKpI,IAA+B,OAAOkJ,EAAe1D,GAC1D,QAAS,OAAOA,IC5ClBoC,EAAe,CACjB7G,MAAO,KACPU,OAAQ,KACRb,MAAO,KACPgI,SAAS,EACTO,iBAAkB,KAGhBC,EAAY,SAAC5D,EAAO4C,GACzB,OAAOzJ,YAAa6G,EAAO,CAAE5E,MAAO,KAAMgI,SAAS,KAG9C5G,EAAc,SAAEwD,EAAO4C,GACzB,OAAOzJ,YAAa6G,EAAO,CACvBzE,MAAOqH,EAAOlG,QACdT,OAAQ2G,EAAO3G,OACfb,MAAO,KACPgI,SAAS,KAIXS,EAAW,SAAE7D,EAAO4C,GACtB,OAAOzJ,YAAc6G,EAAO,CACxB5E,MAAOwH,EAAOxH,MACdgI,SAAS,KAIXU,EAAa,SAAE9D,EAAO4C,GACxB,OAAOzJ,YAAa6G,EAAO,CAAEzE,MAAO,KAAMU,OAAQ,QAGhD6B,EAAsB,SAACkC,EAAO4C,GAChC,OAAOzJ,YAAa6G,EAAO,CAAE2D,iBAAkBf,EAAO7E,QAc3CoF,EAXC,WAAmC,IAAlCnD,EAAiC,uDAAzBoC,EAAcQ,EAAW,uCAC9C,OAAQA,EAAOrI,MACX,KAAKC,IAAwB,OAAOoJ,EAAU5D,GAC9C,KAAKxF,IAA0B,OAAOgC,EAAYwD,EAAO4C,GACzD,KAAKpI,IAAuB,OAAOqJ,EAAS7D,EAAO4C,GACnD,KAAKpI,IAAyB,OAAOsJ,EAAW9D,GAChD,KAAKxF,IAAoC,OAAOsD,EAAoBkC,EAAO4C,GAC3E,QAAS,OAAO5C,I,mDCxBT+D,EApBQ,SAACC,GACpB,kNACIhE,MAAQ,CACJiE,UAAW,MAFnB,mFAK0B,IAAD,OACjBD,IACKjJ,MAAK,SAAAmJ,GACF,EAAKhE,SAAS,CAAC+D,UAAWC,EAAKC,eAR/C,+BAaQ,IAAMC,EAAOnF,KAAKe,MAAMiE,UACxB,OAAOG,EAAO,kBAACA,EAASnF,KAAK9E,OAAY,SAdjD,GAAqBmF,c,4ECOV+E,EANF,SAAClK,GAAD,OACT,yBAAKsE,UAAWC,IAAQ4F,KAAMnF,MAAO,CAACoF,OAAQpK,EAAMoK,SAChD,yBAAKC,IAAKC,IAAYC,IAAI,W,wCCOnBC,GATQ,SAACxK,GAAD,OACnB,wBAAIsE,UAAWC,KAAQkG,gBACnB,kBAAC,IAAD,CACIC,GAAI1K,EAAM2K,KACVC,MAAO5K,EAAM4K,MACbC,gBAAiBtG,KAAQuG,QAAS9K,EAAMC,YCKrC8K,GAVS,SAAC/K,GAAD,OACpB,wBAAIsE,UAAWC,KAAQyG,iBACnB,kBAACP,GAAD,CAAgBE,KAAK,IAAIC,OAAK,GAA9B,kBACC5K,EAAMiL,OAAS,kBAACR,GAAD,CAAgBE,KAAK,WAArB,UAAyD,KACvE3K,EAAMiL,OACF,kBAACR,GAAD,CAAgBE,KAAK,WAArB,UACA,kBAACF,GAAD,CAAgBE,KAAK,SAArB,kB,oBCECO,GATM,SAAClL,GAAD,OACjB,yBAAKsE,UAAWC,KAAQ4G,aAAc1G,QAASzE,EAAM0E,SACjD,8BACA,8BACA,gCCWO0G,GAZC,SAACpL,GAAD,OACZ,4BAAQsE,UAAWC,IAAQ8G,SACvB,kBAACF,GAAD,CAAczG,QAAS1E,EAAMsL,sBAC7B,yBAAKhH,UAAWC,IAAQ4F,MACpB,kBAACA,EAAD,OAEJ,yBAAK7F,UAAWC,IAAQgH,aACpB,kBAACP,GAAD,CAAiBC,OAAQjL,EAAMiL,Y,6BCc5BO,GApBI,SAACxL,GAChB,IAAIyL,EAAkB,CAAClH,KAAQmH,WAAYnH,KAAQoH,QAInD,OAHI3L,EAAM4L,OACNH,EAAkB,CAAClH,KAAQmH,WAAYnH,KAAQsH,OAG/C,kBAAC,IAAD,KACI,kBAACrH,GAAA,EAAD,CAAUH,KAAMrE,EAAM4L,KAAMlH,QAAS1E,EAAM8L,SAC3C,yBAAKxH,UAAWmH,EAAgBjG,KAAK,KAAMf,QAASzE,EAAM8L,QACtD,yBAAKxH,UAAWC,KAAQ4F,MACpB,kBAACA,EAAD,OAEJ,6BACI,kBAACa,GAAD,CAAiBC,OAAQjL,EAAMiL,aCb7Cc,G,2MAEFlG,MAAQ,CACJmG,gBAAgB,G,EAGpBC,wBAA0B,WACtB,EAAKlG,SAAS,CAACiG,gBAAgB,K,EAGnCE,wBAA0B,WACtB,EAAKnG,UAAU,SAAEoG,GACb,MAAO,CAAEH,gBAAiBG,EAAUH,oB,wEAKxC,OACI,kBAAC,IAAD,KACI,kBAACX,GAAD,CACAJ,OAAQnG,KAAK9E,MAAMiL,OACfK,oBAAqBxG,KAAKoH,0BAC9B,kBAACR,GAAD,CACIT,OAAQnG,KAAK9E,MAAMiL,OACnBW,KAAM9G,KAAKe,MAAMmG,eACjBF,OAAQhH,KAAKmH,0BACjB,0BAAM3H,UAAWC,IAAQ6H,SACpBtH,KAAK9E,MAAMC,e,GA3BXkF,aAyCNkH,gBANS,SAAAxG,GACpB,MAAO,CACHoF,OAA6B,OAArBpF,EAAM/C,KAAK1B,SAIZiL,CAAyBN,I,0DChCzBO,GAbM,SAACtM,GAAD,OACjB,yBAAKsE,UAAWC,KAAQgI,cACpB,yBAAKjI,UAAWC,KAAQiI,OAAQxM,EAAMyM,OACtC,4BACInI,UAAWC,KAAQmI,KACnBjI,QAASzE,EAAM2M,QACftH,SAAUrF,EAAMqF,UAHpB,QAIA,4BACIf,UAAWC,KAAQqI,KACnBnI,QAASzE,EAAM6M,OAFnB,UCNFC,GAAW,CACb,CAAEL,MAAO,QAASrM,KAAM,SACxB,CAAEqM,MAAO,QAASrM,KAAM,SACxB,CAAEqM,MAAO,SAAUrM,KAAM,UACzB,CAAEqM,MAAO,OAAQrM,KAAM,SAuBZ2M,GApBO,SAAC/M,GAAD,OAElB,yBAAKsE,UAAWC,KAAQyI,eACpB,6CAAkB,gCAAShN,EAAMiN,MAAMC,QAAQ,GAA7B,MACjBJ,GAASxF,KAAI,SAAA6F,GAAI,OACd,kBAACZ,GAAD,CACIrK,IAAKiL,EAAKV,MACVA,MAAOU,EAAKV,MACZrM,KAAM+M,EAAK/M,KACXyM,MAAO,kBAAM7M,EAAMoN,gBAAgBD,EAAK/M,OACxCuM,QAAS,kBAAM3M,EAAMqN,iBAAiBF,EAAK/M,OAC3CiF,SAAUrF,EAAMqF,SAAS8H,EAAK/M,WAEtC,4BACIkE,UAAWC,KAAQ+I,YACnBjI,UAAWrF,EAAMuN,aACjB9I,QAASzE,EAAMwN,SAAUxN,EAAMiL,OAAS,YAAc,sB,kBCEnDwC,GAzBM,SAACzN,GAElB,IAAM0N,EAAqBtG,OAAOC,KAAKrH,EAAMc,aAC5CwG,KAAI,SAAAC,GACD,OACI,wBAAIrF,IAAKqF,GACL,0BAAMvC,MAAO,CAAC2I,cAAe,eAAgBpG,GADjD,KACiEvH,EAAMc,YAAYyG,OAI3F,OACI,kBAAC,IAAD,KACI,0CACA,iFACA,4BACKmG,GAEL,2BAAG,gDAAsB1N,EAAMiN,MAAMC,QAAQ,KAC7C,oDACA,kBAAC5H,GAAA,EAAD,CAAQC,QAAQ,SAASb,QAAS1E,EAAM4N,mBAAxC,UACA,kBAACtI,GAAA,EAAD,CAAQC,QAAQ,UAAUb,QAAS1E,EAAM6N,mBAAzC,c,8PCVNC,G,2MACFjI,MAAQ,CACJkI,YAAY,EACZ9E,SAAS,G,EASb+E,oBAAsB,SAAClN,GAMnB,OALYsG,OAAOC,KAAKvG,GACnBwG,KAAI,SAAAC,GACD,OAAOzG,EAAYyG,MAEtBK,QAAO,SAACqG,EAAK7O,GAAN,OAAe6O,EAAM7O,KACpB,G,EAGjB8O,gBAAkB,WACT,EAAKlO,MAAMiL,OACZ,EAAKlF,SAAS,CAACgI,YAAY,KAE3B,EAAK/N,MAAMmO,sBAAsB,aACjC,EAAKnO,MAAMoO,QAAQjM,KAAK,W,EAKhCkM,uBAAyB,WACrB,EAAKtI,SAAS,CAACgI,YAAY,K,EAG/BO,wBAA0B,WAOtB,EAAKtO,MAAMuO,iBACX,EAAKvO,MAAMoO,QAAQjM,KAAK,c,mFAlCxB2C,KAAK9E,MAAMwO,sB,+BAsCX,IAAMC,E,2VAAY,IACX3J,KAAK9E,MAAM0O,MAGlB,IAAK,IAAIxM,KAAOuM,EACZA,EAAavM,GAAOuM,EAAavM,IAAQ,EAE7C,IAAIyM,EAAe,KACfzH,EAASpC,KAAK9E,MAAMiB,MAAQ,2DAAsC,kBAAC2N,GAAA,EAAD,MAqBtE,OApBK9J,KAAK9E,MAAM0O,OACZxH,EACI,kBAAC,IAAD,KACI,kBAACc,GAAA,EAAD,CAAQlH,YAAagE,KAAK9E,MAAM0O,OAChC,kBAAC1B,GAAD,CACII,gBAAiBtI,KAAK9E,MAAM6O,kBAC5BxB,iBAAkBvI,KAAK9E,MAAM8O,oBAC7BzJ,SAAUoJ,EACVlB,aAAczI,KAAKkJ,oBAAoBlJ,KAAK9E,MAAM0O,MAClDlB,QAAS1I,KAAKoJ,gBACdjD,OAAQnG,KAAK9E,MAAMiL,OACnBgC,MAAOnI,KAAK9E,MAAMiN,SAG9B0B,EAAe,kBAAC,GAAD,CACX7N,YAAagE,KAAK9E,MAAM0O,KACxBzB,MAAOnI,KAAK9E,MAAMiN,MAClBW,kBAAmB9I,KAAKuJ,uBACxBR,kBAAmB/I,KAAKwJ,2BAG5B,kBAAC,IAAD,KACI,kBAAC3J,GAAA,EAAD,CAAON,KAAMS,KAAKe,MAAMkI,WAAYhJ,YAAaD,KAAKuJ,wBACjDM,GAEJzH,O,GAjFW/B,aA0GbkH,gBAnBS,SAAAxG,GACpB,MAAO,CACH6I,KAAM7I,EAAMkJ,cAAcjO,YAC1BmM,MAAOpH,EAAMkJ,cAAc7G,WAC3BjH,MAAO4E,EAAMkJ,cAAc9N,MAC3BgK,OAA6B,OAArBpF,EAAM/C,KAAK1B,UAIA,SAAAX,GACvB,MAAO,CACHoO,kBAAmB,SAAC1O,GAAD,OAAaM,EAASuO,KAAsB7O,KAC/D2O,oBAAqB,SAAC3O,GAAD,OAAaM,EAASuO,KAAyB7O,KACpEqO,kBAAmB,kBAAM/N,EAASuO,SAClCT,eAAgB,kBAAM9N,EAASuO,SAC/Bb,sBAAuB,SAACvK,GAAD,OAAUnD,EAASuO,KAA4BpL,QAI/DyI,CAA6C1G,aAAiBmI,GAAepN,OClHtFuO,G,4LAGEnK,KAAK9E,MAAMkP,a,+BAIX,OAAO,kBAAC,IAAD,CAAUxE,GAAG,U,GAPPvF,aAiBNkH,eAAQ,MANI,SAAA5L,GACvB,MAAO,CACHyO,SAAU,kBAAMzO,EAASuO,YAIlB3C,CAAkC4C,ICb3CE,GAAgBvF,GAAe,WAGnC,OAFAwF,QAAQC,IAAI,wBAEL,iCAGHC,GAAc1F,GAAe,WAEjC,OADAwF,QAAQC,IAAI,sBACL,iCAGHE,GAAY3F,GAAe,WAC/B,OAAO,iCAIH4F,G,4LAEF1K,KAAK9E,MAAMyP,oB,+BAIX,IAAIC,EACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9L,KAAK,QAAQkG,UAAWyF,KAC/B,kBAAC,IAAD,CAAO3E,OAAK,EAAChH,KAAK,IAAIkG,UAAWgE,KACjC,kBAAC,IAAD,CAAUpD,GAAG,OAiBjB,OAbI5F,KAAK9E,MAAMiL,SACbyE,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO9L,KAAK,YAAYkG,UAAWqF,KACnC,kBAAC,IAAD,CAAOvL,KAAK,UAAUkG,UAAWwF,KACjC,kBAAC,IAAD,CAAO1L,KAAK,UAAUkG,UAAWmF,KACjC,kBAAC,IAAD,CAAOrL,KAAK,QAAQkG,UAAWyF,KAC/B,kBAAC,IAAD,CAAO3E,OAAK,EAAChH,KAAK,IAAIkG,UAAWgE,KACjC,kBAAC,IAAD,CAAUpD,GAAG,QAMjB,yBAAKpG,UAAU,OACb,kBAAC,GAAD,KACGoL,Q,GA9BOvK,aAkDHwK,eAAWtD,aAZF,SAAAxG,GACtB,MAAO,CACLoF,OAA6B,OAArBpF,EAAM/C,KAAK1B,UAII,SAAAX,GACzB,MAAO,CACLgP,gBAAiB,kBAAMhP,EAASuO,YAIV3C,CAA6CmD,KChEnDI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCJN,IAAMC,GAAkHC,IAElHC,GAAcC,YAAgB,CAChCrB,cAAesB,EACfC,MAAOC,EACPzN,KAAM0N,IAGJC,GAAQC,YAAYP,GAAaF,GACnCU,YAAgBC,OAGdC,GACF,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,IAAD,CAAeK,SAAS,sBACpB,kBAAC,GAAD,QAKZC,IAASC,OAAOH,GAAKI,SAASC,eAAe,SD+FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzQ,MAAK,SAAA0Q,GACjCA,EAAaC,kB","file":"static/js/main.d00b7e2a.chunk.js","sourcesContent":["\r\nexport const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\r\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\"; \r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\"; \r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\"; \r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    if(!rules) {\r\n        return true;\r\n    };\r\n\r\n    if (rules.required) {\r\n        isValid = value.trim() !== '' && isValid;//trim will remove empty spaces if there are\r\n    };\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    };\r\n    \r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.minLength && isValid;\r\n    };\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    };\r\n    if (rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid\r\n    };\r\n    return isValid;\r\n};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (ingName) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENTS,\r\n        ingredientName: ingName\r\n    };\r\n};\r\n\r\n\r\nexport const removeIngredient = (ingName) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENTS,\r\n        ingredientName: ingName\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n}\r\n\r\n//fetch data from Firebase\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-burger-7e3d7.firebaseio.com/ingredients.json')\r\n            .then(res => {\r\n                dispatch(setIngredients(res.data))\r\n            })\r\n            .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n            });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n};\r\n\r\nexport const purchaseBurger = ( orderData, token ) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post( '/orders.json?auth=' + token, orderData )\r\n            .then( response => {\r\n                dispatch(purchaseBurgerSuccess( response.data.name, orderData ))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail( error ));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrderSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrderFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error \r\n    };\r\n};\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"'  + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                };\r\n                dispatch(fetchOrderSuccess(fetchedOrders));\r\n            })\r\n            .catch(err =>{\r\n                dispatch(fetchOrderFail(err));\r\n            });\r\n    };\r\n};","import * as actioTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actioTypes.AUTH_START\r\n    }\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n\r\n    return {\r\n        type: actioTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actioTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actioTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        },expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken : true\r\n        }\r\n        const key = 'AIzaSyDGGiJdiIOfUbiU3W8RFXbm5uk02tgla70';\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=';\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=';\r\n        };\r\n        axios.post(url + key, authData)\r\n            .then(res => {\r\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n                localStorage.setItem('token', res.data.idToken);\r\n                localStorage.setItem('expirationTime', expirationDate);\r\n                localStorage.setItem('userId', res.data.localId);\r\n                dispatch(authSuccess(res.data.idToken, res.data.localId));\r\n                dispatch(checkAuthTimeout(res.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            })\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actioTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationTime = new Date(localStorage.getItem('expirationTime'));\r\n            if (expirationTime <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationTime.getTime() - new Date().getTime()) / 1000));\r\n            };\r\n        };\r\n    };\r\n}","export { addIngredient, removeIngredient, initIngredients } from './burgerBuilder';\r\nexport { purchaseBurger, purchaseInit, fetchOrders } from './order';\r\nexport { auth, logout, setAuthRedirectPath, authCheckState } from './auth';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__19gI3\",\"BreadTop\":\"BurgerIngredient_BreadTop__1iW5e\",\"Seeds1\":\"BurgerIngredient_Seeds1__3waL3\",\"Seeds2\":\"BurgerIngredient_Seeds2__2qyTX\",\"Meat\":\"BurgerIngredient_Meat__uio7W\",\"Cheese\":\"BurgerIngredient_Cheese__3KyW_\",\"Salad\":\"BurgerIngredient_Salad__ngBz-\",\"Bacon\":\"BurgerIngredient_Bacon__3DJ8j\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-7e3d7.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2GbVf\",\"Open\":\"SideDrawer_Open__2A4Cb\",\"Closed\":\"SideDrawer_Closed__3qO3N\",\"Logo\":\"SideDrawer_Logo__3LdtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3-uMa\",\"Label\":\"BuildControl_Label__75EMU\",\"Less\":\"BuildControl_Less__3OErp\",\"More\":\"BuildControl_More__1b9K9\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    };\r\n\r\n};\r\n\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__wYcYB\",\"Logo\":\"Toolbar_Logo__16lcg\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2w06J\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button \r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>\r\n        {props.children}</button>\r\n);\r\n\r\nexport default button;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3E1AO\",\"active\":\"NavigationItem_active__1wJNu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2IMdR\",\"OrderButton\":\"BuildControls_OrderButton__3ed5V\",\"enable\":\"BuildControls_enable__1OY7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2pYqn\",\"Success\":\"Button_Success__3WPOp\",\"Danger\":\"Button_Danger__2GlO2\"};","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = (props) => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;\r\n","\r\nimport React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\n\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        };\r\n\r\n        componentDidMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        };\r\n\r\n        \r\n        componentWillUnmount () {\r\n            //this will remove the interceptors when component unMount in order to not have \r\n            // irelevant interceptors in memory.\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        };\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        };\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                <Modal \r\n                    show={this.state.error}\r\n                    modalClosed={this.errorConfirmedHandler}>\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        };\r\n    };\r\n};\r\n\r\nexport default withErrorHandler\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nconst burgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case ( 'bread-bottom' ):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case ( 'bread-top' ):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ( 'meat' ):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case ( 'cheese' ):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case ( 'bacon' ):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case ( 'salad' ):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    \r\n    \r\n    return ingredient;\r\n};\r\n\r\nburgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default burgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            });\r\n        }).reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n        \r\n    if (transformedIngredients.length === 0 ) {\r\n        transformedIngredients = <p>Plese start adding ingredients!</p>\r\n    };\r\n    \r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n                {transformedIngredients}    \r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__PfwAP\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__ATov3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2oI8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__20FP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1SqBe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__17vVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__B-aFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3huqO\",\"load2\":\"Spinner_load2__1HdUk\"};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice : 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient )\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng )\r\n    const updatedSta = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedSta);\r\n};\r\n\r\nconst setIngredients = (state, action ) => {\r\n    return updateObject(state, {\r\n        ingredients: {//Wrote this insted taking the action.ingredients to make salad top and meat bottom (firebase order change the positions)\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, {error: true});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENTS: return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENTS: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n    \r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchased: false});\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, {id: action.orderId});\r\n    return updateObject(state, { loading: false, orders: state.orders.concat(newOrder), purchased: true});\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrderStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchOrderSuccess = (state, action) => {\r\n    return updateObject(state, { orders: action.orders, loading: false });\r\n};\r\n\r\nconst fetchOrderFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrderStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrderSuccess(state, action)\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrderFail(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n return updateObject(state, { error: null, loading: true});\r\n};\r\n\r\nconst authSuccess = ( state, action ) => {\r\n    return updateObject(state, { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n     });\r\n};\r\n\r\nconst authFail = ( state, action ) => {\r\n    return updateObject( state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = ( state, action ) => {\r\n    return updateObject(state, { token: null, userId: null})\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path})\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        };\r\n\r\n        componentDidMount () {\r\n            importComponent()\r\n                .then(comp => {\r\n                    this.setState({component: comp.default });\r\n                });\r\n        };\r\n\r\n        render () {\r\n            const Comp = this.state.component;\r\n            return Comp ? <Comp {...this.props} /> : null;\r\n        };\r\n    };\r\n};\r\n\r\nexport default asyncComponent;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"Logo\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link} \r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuth ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        { props.isAuth \r\n            ? <NavigationItem link=\"/logout\">Logout</NavigationItem> \r\n            : <NavigationItem link=\"/auth\">Authenticate</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\n\r\nexport default drawerToggle;\r\n","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo/>\r\n        </div> \r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuth={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from  '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Closed];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuth={props.isAuth} />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    )\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawertoggleHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer }\r\n        });\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar \r\n                isAuth={this.props.isAuth}\r\n                    drawerToggleClicked={this.sideDrawertoggleHandler}/>\r\n                <SideDrawer \r\n                    isAuth={this.props.isAuth}\r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' }\r\n];\r\n\r\nconst buildControls = (props) => (\r\n\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}$</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label}\r\n                type={ctrl.type}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemove(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchaseable}\r\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n)\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst OrderSummary = (props) => {\r\n\r\n    const ingredientsSummary = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}\r\n            </li>)\r\n    });\r\n\r\n    return ( \r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientsSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n        </Aux>\r\n    ); \r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport axios from '../../axios-orders';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false,\r\n        loading: false\r\n \r\n\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.props.onInitIngredients();\r\n    };\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((acc, value)=> acc + value);\r\n        return sum > 0;\r\n    };   \r\n\r\n    purchaseHandler = () => {\r\n        if ( this.props.isAuth ) {\r\n            this.setState({purchasing: true});\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push(\"/auth\");\r\n        };\r\n        \r\n    };\r\n\r\n    purchaseCancelHandeler = () => {\r\n        this.setState({purchasing: false})\r\n    };\r\n\r\n    purchaseContinueHandler = () => {\r\n        // const queryParams = [];\r\n        // for ( let i in this.state.ingredients) {\r\n        //     queryParams.push(i + '=' + this.state.ingredients[i]);\r\n        // }\r\n        // queryParams.push('price=' + this.state.totalPrice);\r\n        // const queryString = queryParams.join('&');\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    };\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        };\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />  ;\r\n        if ( this.props.ings ) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemove={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuth}\r\n                        price={this.props.price} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary \r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandeler}\r\n                purchaseContinued={this.purchaseContinueHandler}/>\r\n        };\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandeler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuth: state.auth.token !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","\r\nimport React, { Component } from 'react';\r\nimport * as actions from '../../../store/actions/index';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount () {\r\n        this.props.onLogout();\r\n    };\r\n\r\n    render () {\r\n        return <Redirect to=\"/\"/>\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n// const Auth = React.lazy(() => import('./containers/Auth/Auth'))\n\nconst asyncCheckout = asyncComponent(() => {\n  console.log('Checkout lazy loaded');\n  \n  return import('./containers/Checkout/Checkout');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  console.log('Orders lazy loaded');\n  return import('./containers/Orders/Orders');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  };\n\n  render () {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={asyncAuth} />\n        <Route exact path=\"/\" component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props.isAuth) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={asyncCheckout} />\n          <Route path=\"/orders\" component={asyncOrders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={asyncAuth} />\n          <Route exact path=\"/\" component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    };\n\n    return (\n      <div className=\"App\">\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  };\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//the NODE_ENV lets us know if we are in DEV mode, we only want the devTools to work in dev mode.\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename='/BurgerAPP-ReactJS'>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}